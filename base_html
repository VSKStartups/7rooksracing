<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/11.0.0/firebase-app.js";
  import {
    getAuth,
    RecaptchaVerifier,
    signInWithPhoneNumber,
  } from "https://www.gstatic.com/firebasejs/11.0.0/firebase-auth.js";

  // ‚≠ê Firestore imports
  import {
    getFirestore,
    doc,
    setDoc,
    getDoc,
    serverTimestamp,
  } from "https://www.gstatic.com/firebasejs/11.0.0/firebase-firestore.js";

  const firebaseConfig = {
    apiKey: "YOUR_API_KEY",
    authDomain: "YOUR_AUTH_DOMAIN",
    projectId: "YOUR_PROJECT_ID",
    storageBucket: "YOUR_STORAGE_BUCKET",
    messagingSenderId: "YOUR_SENDER_ID",
    appId: "YOUR_APP_ID",
  };

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);
  
  // ‚≠ê Init Firestore
  const db = getFirestore(app);

  const loginBtn = document.getElementById("loginBtn");
  const phoneInput = document.getElementById("phoneInput");
  const otpModal = document.getElementById("otpModal");
  const otpInput = document.getElementById("otpInput");
  const otpVerifyBtn = document.getElementById("otpVerifyBtn");
  const toast = document.getElementById("toast");

  const showToast = (msg, error = false) => {
    toast.textContent = msg;
    toast.style.backgroundColor = error ? "#c0392b" : "#222";
    toast.classList.add("show");
    setTimeout(() => toast.classList.remove("show"), 3000);
  };

  window.recaptchaVerifier = new RecaptchaVerifier(
    "recaptcha-container",
    { size: "invisible" },
    auth
  );

  loginBtn.addEventListener("click", () => {
    const phoneNumber = phoneInput.value.trim();
    if (!phoneNumber.startsWith("+")) {
      showToast("Include country code, e.g. +60123456789", true);
      return;
    }

    signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier)
      .then((confirmationResult) => {
        window.confirmationResult = confirmationResult;
        otpModal.classList.add("active");
        showToast("OTP sent! Please check SMS üì±");
      })
      .catch((error) => showToast(error.message, true));
  });

  otpVerifyBtn.addEventListener("click", async () => {
    const code = otpInput.value.trim();
    if (!code) return showToast("Enter OTP code", true);

    try {
      const result = await window.confirmationResult.confirm(code);
      const user = result.user;

      // ‚≠ê Firestore: Create/Update Racer Profile
      const userRef = doc(db, "racers", user.uid);
      const existingUser = await getDoc(userRef);

      if (!existingUser.exists()) {
        // ‚≠ê First login ‚Äî create profile
        await setDoc(userRef, {
          phoneNumber: user.phoneNumber,
          createdAt: serverTimestamp(),
          lastLogin: serverTimestamp(),
          displayName: null,
          fastestLap: null,
          racesCompleted: 0,
        });
      } else {
        // ‚≠ê Update only last login time
        await setDoc(
          userRef,
          { lastLogin: serverTimestamp() },
          { merge: true }
        );
      }

      otpModal.classList.remove("active");
      showToast("Welcome, Racer! üèéÔ∏è");

      document.getElementById("loginContainer").innerHTML = `
        <h1>Welcome üèÅ</h1>
        <p><strong>Phone:</strong> ${user.phoneNumber}</p>
        <button onclick="logout()">Logout</button>
      `;
    } catch (error) {
      console.error(error);
      showToast("Invalid OTP ‚ùå", true);
    }
  });

  window.logout = () => {
    localStorage.removeItem("kartUser");
    location.reload();
  };
</script>
